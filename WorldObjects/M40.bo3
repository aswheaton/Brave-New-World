
#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 object                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This is the config file of a custom object.
# If you add this object correctly to your BiomeConfigs, it will spawn in the world.

# This is the creator of this BO3 object
Author: NLBlackEagle

# A short description of this BO3 object
Description: Converted version of the BO2 40

# The BO3 version, don't change this! It can be used by external applications to do a version check.
Version: 3

# The settings mode, WriteAll, WriteWithoutComments or WriteDisable. See WorldConfig.
SettingsMode: WriteDisable


#######################################################################
# +-----------------------------------------------------------------+ #
# |                          Main settings                          | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This needs to be set to true to spawn the object in the Tree and Sapling resources.
Tree: true

# The frequency of the BO3 from 1 to 200. Tries this many times to spawn this BO3 when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Frequency: 1

# The rarity of the BO3 from 0 to 100. Each spawn attempt has rarity% chance to succeed when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Rarity: 100.0

# If you set this to true, the BO3 will be placed with a random rotation.
RotateRandomly: true

# The spawn height of the BO3 - randomY, highestBlock or highestSolidBlock.
SpawnHeight: highestSolidBlock

# The height limits for the BO3.
MinHeight: 0

MaxHeight: 199

# Objects can have other objects attacthed to it: branches. Branches can also
# have branches attached to it, which can also have branches, etc. This is the
# maximum branch depth for this objects.
MaxBranchDepth: 10

# When spawned with the UseWorld keyword, this BO3 should NOT spawn in the following biomes.
# If you writer.write the BO3 name directly in the BiomeConfigs, this will be ignored.
ExcludedBiomes: 


#######################################################################
# +-----------------------------------------------------------------+ #
# |                      Source block settings                      | #
# +-----------------------------------------------------------------+ #
#######################################################################

# The block(s) the BO3 should spawn in.
SourceBlocks: AIR

# The maximum percentage of the BO3 that can be outside the SourceBlock.
# The BO3 won't be placed on a location with more blocks outside the SourceBlock than this percentage.
MaxPercentageOutsideSourceBlock: 20

# What to do when a block is about to be placed outside the SourceBlock? (dontPlace, placeAnyway)
OutsideSourceBlock: placeAnyway


#######################################################################
# +-----------------------------------------------------------------+ #
# |                              Blocks                             | #
# +-----------------------------------------------------------------+ #
#######################################################################

# All the blocks used in the BO3 are listed here. Possible blocks:
# Block(x,y,z,id[.data][,nbtfile.nbt)
# RandomBlock(x,y,z,id[:data][,nbtfile.nbt],chance[,id[:data][,nbtfile.nbt],chance[,...]])
# So RandomBlock(0,0,0,CHEST,chest.nbt,50,CHEST,anotherchest.nbt,100) will spawn a chest at
# the BO3 origin, and give it a 50% chance to have the contents of chest.nbt, or, if that
# fails, a 100% percent chance to have the contents of anotherchest.nbt.
Block(6,9,-8,LEAVES:13)
Block(6,7,-8,LEAVES:13)
Block(6,8,-8,LEAVES:13)
Block(6,5,-8,LEAVES:13)
Block(6,6,-8,LEAVES:13)
Block(6,3,-8,LOG:12)
Block(9,7,-7,LEAVES:13)
Block(11,7,-6,LEAVES:13)
Block(6,4,-8,LOG:12)
Block(9,8,-7,LEAVES:13)
Block(9,17,-7,LEAVES:5)
Block(9,5,-7,LEAVES:13)
Block(6,1,-8,LOG:12)
Block(9,16,-7,LEAVES:5)
Block(9,6,-7,LEAVES:13)
Block(6,2,-8,LOG:12)
Block(6,-1,-8,LEAVES:14)
Block(9,18,-7,LEAVES:5)
Block(9,4,-7,LEAVES:13)
Block(6,0,-8,LOG:12)
Block(9,13,-7,LEAVES:5)
Block(9,12,-7,LEAVES:13)
Block(9,15,-7,LEAVES:5)
Block(9,14,-7,LEAVES:5)
Block(9,8,-5,LEAVES:13)
Block(6,-8,-8,LOG:12)
Block(6,-7,-8,LOG:12)
Block(6,-6,-8,LOG:12)
Block(9,11,-7,LEAVES:13)
Block(6,0,-6,LEAVES:14)
Block(6,-5,-8,LOG:12)
Block(6,-4,-8,LOG:12)
Block(6,-3,-8,LOG:12)
Block(6,-2,-8,LOG:12)
Block(6,7,-6,LEAVES:13)
Block(6,6,-6,LEAVES:13)
Block(9,9,-5,LEAVES:13)
Block(9,9,-10,LEAVES:13)
Block(9,7,-10,LEAVES:13)
Block(9,8,-10,LEAVES:13)
Block(8,17,-7,LEAVES:5)
Block(8,18,-7,LEAVES:5)
Block(8,19,-7,LEAVES:5)
Block(8,16,-7,LEAVES:5)
Block(10,7,-7,LEAVES:13)
Block(10,6,-7,LEAVES:13)
Block(10,5,-7,LEAVES:13)
Block(6,7,-10,LEAVES:13)
Block(6,9,-10,LEAVES:13)
Block(6,8,-10,LEAVES:13)
Block(8,10,-7,LEAVES:13)
Block(8,11,-7,LEAVES:13)
Block(5,-6,-6,LOG:12)
Block(5,-7,-6,LOG:12)
Block(5,-1,-6,LEAVES:14)
Block(10,4,-7,LEAVES:13)
Block(6,0,-5,LEAVES:14)
Block(7,23,-6,LEAVES:5)
Block(4,5,-3,LEAVES:5)
Block(7,22,-6,LEAVES:5)
Block(4,4,-3,LEAVES:5)
Block(9,9,-6,LEAVES:13)
Block(9,8,-6,LEAVES:13)
Block(6,11,-8,LEAVES:13)
Block(6,10,-8,LEAVES:13)
Block(4,4,-2,LEAVES:5)
Block(6,0,-7,LEAVES:14)
Block(6,1,-7,LEAVES:14)
Block(6,6,-7,LEAVES:13)
Block(10,15,-5,LEAVES:5)
Block(6,7,-7,LEAVES:13)
Block(6,5,-7,LEAVES:13)
Block(6,18,-8,LEAVES:5)
Block(6,19,-8,LEAVES:5)
Block(7,24,-6,LEAVES:5)
Block(6,8,-7,LEAVES:13)
Block(6,16,-8,LEAVES:5)
Block(6,17,-8,LEAVES:5)
Block(10,16,-5,LEAVES:5)
Block(6,9,-7,LEAVES:13)
Block(6,22,-10,LEAVES:5)
Block(6,23,-10,LEAVES:5)
Block(6,20,-8,LEAVES:5)
Block(3,6,-10,LEAVES:13)
Block(6,21,-8,LEAVES:5)
Block(3,7,-11,LEAVES:13)
Block(3,6,-11,LEAVES:13)
Block(3,5,-11,LEAVES:13)
Block(6,24,-10,LEAVES:5)
Block(7,14,-6,LEAVES:5)
Block(7,15,-6,LEAVES:5)
Block(9,19,-8,LEAVES:5)
Block(8,-7,-7,LOG:12)
Block(9,15,-8,LEAVES:5)
Block(9,14,-8,LEAVES:5)
Block(9,13,-8,LEAVES:5)
Block(5,13,-4,LEAVES:5)
Block(8,-6,-7,LOG:12)
Block(8,-1,-7,LEAVES:14)
Block(5,12,-4,LEAVES:13)
Block(9,25,-8,LEAVES:5)
Block(7,7,-7,LEAVES:13)
Block(9,24,-8,LEAVES:5)
Block(7,5,-7,LEAVES:13)
Block(7,6,-7,LEAVES:13)
Block(10,4,-6,LEAVES:13)
Block(10,5,-6,LEAVES:13)
Block(5,8,-7,LEAVES:13)
Block(5,9,-7,LEAVES:13)
Block(5,0,-8,LEAVES:14)
Block(9,20,-8,LEAVES:5)
Block(6,-6,-7,LOG:12)
Block(5,0,-7,LEAVES:14)
Block(9,21,-8,LEAVES:5)
Block(9,22,-8,LEAVES:5)
Block(9,23,-8,LEAVES:5)
Block(5,1,-7,LEAVES:14)
Block(6,-7,-7,LOG:12)
Block(6,-1,-6,LEAVES:14)
Block(6,-2,-7,LOG:12)
Block(6,-1,-7,LEAVES:14)
Block(6,-4,-7,LOG:12)
Block(6,-3,-7,LOG:12)
Block(7,-2,-7,LOG:12)
Block(7,-1,-7,LEAVES:14)
Block(5,-1,-5,LEAVES:14)
Block(7,6,-10,LEAVES:13)
Block(7,5,-10,LEAVES:13)
Block(7,-5,-6,LOG:12)
Block(7,-1,-6,LEAVES:14)
Block(4,16,-7,LEAVES:5)
Block(6,-7,-10,LOG:12)
Block(7,-7,-6,LOG:12)
Block(4,17,-7,LEAVES:5)
Block(6,16,-10,LEAVES:5)
Block(6,17,-10,LEAVES:5)
Block(7,22,-9,LEAVES:5)
Block(7,21,-9,LEAVES:5)
Block(7,20,-9,LEAVES:5)
Block(7,25,-9,LEAVES:5)
Block(7,24,-9,LEAVES:5)
Block(7,23,-9,LEAVES:5)
Block(4,-1,-8,LEAVES:14)
Block(4,-6,-8,LOG:12)
Block(9,20,-11,LEAVES:5)
Block(7,15,-7,LEAVES:5)
Block(9,21,-11,LEAVES:5)
Block(7,14,-7,LEAVES:5)
Block(10,12,-7,LEAVES:13)
Block(10,13,-7,LEAVES:5)
Block(9,8,-4,LEAVES:13)
Block(10,11,-7,LEAVES:13)
Block(10,14,-7,LEAVES:5)
Block(5,-1,-10,LEAVES:14)
Block(10,15,-7,LEAVES:5)
Block(4,-1,-9,LEAVES:14)
Block(10,24,-8,LEAVES:5)
Block(10,25,-8,LEAVES:5)
Block(10,23,-8,LEAVES:5)
Block(9,20,-13,LEAVES:5)
Block(10,20,-8,LEAVES:5)
Block(10,21,-8,LEAVES:5)
Block(7,12,-7,LEAVES:13)
Block(13,4,-6,LEAVES:5)
Block(7,13,-7,LEAVES:5)
Block(7,11,-7,LEAVES:13)
Block(4,-1,-7,LEAVES:14)
Block(8,20,-7,LEAVES:5)
Block(8,21,-7,LEAVES:5)
Block(10,23,-7,LEAVES:5)
Block(8,22,-7,LEAVES:5)
Block(8,23,-7,LEAVES:5)
Block(7,17,-8,LEAVES:5)
Block(7,18,-8,LEAVES:5)
Block(7,15,-8,LEAVES:5)
Block(7,16,-8,LEAVES:5)
Block(7,17,-9,LEAVES:5)
Block(7,16,-9,LEAVES:5)
Block(7,19,-9,LEAVES:5)
Block(7,18,-9,LEAVES:5)
Block(7,10,-8,LEAVES:13)
Block(7,12,-9,LEAVES:13)
Block(7,13,-9,LEAVES:5)
Block(5,-7,-10,LOG:12)
Block(7,14,-9,LEAVES:5)
Block(7,15,-9,LEAVES:5)
Block(7,14,-8,LEAVES:5)
Block(7,13,-8,LEAVES:5)
Block(7,10,-9,LEAVES:13)
Block(7,12,-8,LEAVES:13)
Block(7,11,-9,LEAVES:13)
Block(7,11,-8,LEAVES:13)
Block(8,24,-7,LEAVES:5)
Block(5,6,-9,LEAVES:13)
Block(5,5,-9,LEAVES:13)
Block(5,7,-9,LEAVES:13)
Block(6,13,-4,LEAVES:5)
Block(11,24,-7,LEAVES:5)
Block(6,14,-4,LEAVES:5)
Block(11,23,-7,LEAVES:5)
Block(6,-5,-10,LOG:12)
Block(6,-6,-10,LOG:12)
Block(9,19,-13,LEAVES:5)
Block(11,5,-6,LEAVES:13)
Block(11,6,-6,LEAVES:13)
Block(11,4,-6,LEAVES:13)
Block(7,22,-7,LEAVES:5)
Block(2,6,-11,LEAVES:13)
Block(8,13,-8,LEAVES:5)
Block(2,5,-11,LEAVES:13)
Block(8,12,-8,LEAVES:13)
Block(8,11,-8,LEAVES:13)
Block(8,10,-8,LEAVES:13)
Block(4,-1,-6,LEAVES:14)
Block(6,16,-11,LEAVES:5)
Block(6,17,-11,LEAVES:5)
Block(6,18,-11,LEAVES:5)
Block(5,19,-8,LEAVES:5)
Block(5,18,-8,LEAVES:5)
Block(4,11,-10,LEAVES:13)
Block(5,7,-11,LEAVES:13)
Block(4,12,-10,LEAVES:13)
Block(5,8,-11,LEAVES:13)
Block(4,13,-10,LEAVES:5)
Block(5,7,-10,LEAVES:13)
Block(5,8,-10,LEAVES:13)
Block(8,18,-8,LEAVES:5)
Block(11,5,-7,LEAVES:13)
Block(8,19,-8,LEAVES:5)
Block(8,16,-8,LEAVES:5)
Block(8,17,-8,LEAVES:5)
Block(8,14,-8,LEAVES:5)
Block(8,15,-8,LEAVES:5)
Block(8,22,-8,LEAVES:5)
Block(8,21,-8,LEAVES:5)
Block(8,24,-8,LEAVES:5)
Block(8,23,-8,LEAVES:5)
Block(10,8,-11,LEAVES:13)
Block(5,6,-10,LEAVES:13)
Block(10,7,-11,LEAVES:13)
Block(5,5,-10,LEAVES:13)
Block(8,20,-8,LEAVES:5)
Block(5,20,-8,LEAVES:5)
Block(5,-1,-9,LEAVES:14)
Block(5,-2,-9,LOG:12)
Block(5,14,-10,LEAVES:5)
Block(5,13,-10,LEAVES:5)
Block(5,12,-10,LEAVES:13)
Block(5,11,-10,LEAVES:13)
Block(8,25,-8,LEAVES:5)
Block(9,4,-14,LEAVES:5)
Block(10,12,-12,LEAVES:13)
Block(10,13,-12,LEAVES:5)
Block(10,14,-12,LEAVES:5)
Block(9,5,-14,LEAVES:5)
Block(7,-6,-10,LOG:12)
Block(7,-1,-9,LOG:12)
Block(3,-1,-7,LEAVES:14)
Block(9,19,-11,LEAVES:5)
Block(9,12,-11,LEAVES:13)
Block(7,-5,-9,LOG:12)
Block(9,11,-11,LEAVES:13)
Block(7,-2,-9,LOG:12)
Block(7,-3,-9,LOG:12)
Block(9,15,-11,LEAVES:5)
Block(9,14,-11,LEAVES:5)
Block(9,13,-11,LEAVES:5)
Block(11,11,-14,LEAVES:5)
Block(11,12,-14,LEAVES:5)
Block(11,13,-14,LEAVES:5)
Block(12,13,-6,LEAVES:5)
Block(8,19,-11,LEAVES:5)
Block(12,14,-6,LEAVES:5)
Block(12,11,-6,LEAVES:5)
Block(12,12,-6,LEAVES:5)
Block(8,6,-10,LEAVES:13)
Block(8,7,-10,LEAVES:13)
Block(8,4,-10,LEAVES:13)
Block(7,6,-8,LOG:12)
Block(8,5,-7,LEAVES:13)
Block(7,1,-9,LOG:12)
Block(7,2,-9,LOG:12)
Block(7,7,-8,LOG:12)
Block(8,9,-6,LEAVES:13)
Block(9,23,-9,LEAVES:5)
Block(6,19,-9,LEAVES:5)
Block(7,4,-8,LOG:12)
Block(8,8,-6,LEAVES:13)
Block(9,24,-9,LEAVES:5)
Block(7,5,-8,LOG:12)
Block(7,0,-9,LOG:12)
Block(5,-2,-8,LOG:12)
Block(5,-1,-8,LEAVES:14)
Block(7,8,-8,LOG:12)
Block(7,9,-8,LEAVES:13)
Block(7,9,-9,LEAVES:13)
Block(10,10,-10,LEAVES:13)
Block(7,7,-9,LEAVES:13)
Block(8,10,-9,LEAVES:13)
Block(4,10,-6,LEAVES:13)
Block(11,19,-8,LEAVES:5)
Block(7,8,-9,LEAVES:13)
Block(7,5,-9,LOG:12)
Block(7,2,-8,LOG:12)
Block(8,9,-7,LEAVES:13)
Block(8,12,-9,LEAVES:13)
Block(7,6,-9,LEAVES:13)
Block(7,3,-8,LOG:12)
Block(8,8,-7,LEAVES:13)
Block(8,11,-9,LEAVES:13)
Block(7,3,-9,LOG:12)
Block(7,0,-8,LOG:12)
Block(8,7,-7,LEAVES:13)
Block(8,14,-9,LEAVES:5)
Block(8,6,-7,LEAVES:13)
Block(7,4,-9,LOG:12)
Block(7,1,-8,LOG:12)
Block(8,13,-9,LEAVES:5)
Block(8,15,-9,LEAVES:5)
Block(10,18,-10,LEAVES:5)
Block(8,16,-9,LEAVES:5)
Block(8,17,-9,LEAVES:5)
Block(8,8,-9,LEAVES:13)
Block(8,18,-9,LEAVES:5)
Block(8,9,-9,LEAVES:13)
Block(8,19,-9,LEAVES:5)
Block(8,6,-9,LEAVES:13)
Block(8,7,-9,LEAVES:13)
Block(10,17,-10,LEAVES:5)
Block(8,5,-9,LEAVES:13)
Block(10,16,-10,LEAVES:5)
Block(8,7,-8,LEAVES:13)
Block(5,-6,-8,LOG:12)
Block(8,8,-8,LEAVES:13)
Block(8,5,-8,LEAVES:13)
Block(5,-3,-8,LOG:12)
Block(6,12,-9,LEAVES:13)
Block(8,6,-8,LEAVES:13)
Block(5,-4,-8,LOG:12)
Block(6,11,-9,LEAVES:13)
Block(9,26,-9,LEAVES:5)
Block(6,14,-9,LEAVES:5)
Block(9,25,-9,LEAVES:5)
Block(6,13,-9,LEAVES:5)
Block(5,-8,-8,LOG:12)
Block(6,15,-9,LEAVES:5)
Block(9,4,-13,LEAVES:13)
Block(9,5,-13,LEAVES:13)
Block(9,6,-13,LEAVES:13)
Block(3,9,-6,LEAVES:13)
Block(5,11,-9,LEAVES:13)
Block(7,18,-10,LEAVES:5)
Block(7,-2,-8,LOG:12)
Block(5,12,-3,LEAVES:5)
Block(7,16,-10,LEAVES:5)
Block(7,17,-10,LEAVES:5)
Block(7,-1,-8,LOG:12)
Block(5,13,-3,LEAVES:5)
Block(7,-4,-8,LOG:12)
Block(7,-3,-8,LOG:12)
Block(4,0,-7,LEAVES:14)
Block(11,20,-8,LEAVES:5)
Block(11,21,-8,LEAVES:5)
Block(8,25,-9,LEAVES:5)
Block(8,24,-9,LEAVES:5)
Block(8,23,-9,LEAVES:5)
Block(8,22,-9,LEAVES:5)
Block(8,21,-9,LEAVES:5)
Block(8,20,-9,LEAVES:5)
Block(5,-5,-7,LOG:12)
Block(11,13,-6,LEAVES:5)
Block(5,16,-12,LEAVES:5)
Block(5,17,-12,LEAVES:5)
Block(11,12,-6,LEAVES:13)
Block(5,-3,-7,LOG:12)
Block(5,-2,-7,LOG:12)
Block(11,14,-6,LEAVES:5)
Block(5,-8,-7,LOG:12)
Block(5,-6,-7,LOG:12)
Block(11,11,-6,LEAVES:13)
Block(5,0,-6,LEAVES:14)
Block(6,-1,-9,LOG:12)
Block(4,8,-10,LEAVES:13)
Block(6,-2,-9,LOG:12)
Block(11,16,-11,LEAVES:5)
Block(11,17,-11,LEAVES:5)
Block(6,12,-5,LEAVES:13)
Block(5,6,-6,LEAVES:13)
Block(6,14,-6,LEAVES:5)
Block(5,5,-6,LEAVES:13)
Block(5,7,-12,LEAVES:13)
Block(10,17,-6,LEAVES:5)
Block(6,12,-6,LEAVES:13)
Block(6,13,-6,LEAVES:5)
Block(10,16,-6,LEAVES:5)
Block(5,7,-4,LEAVES:13)
Block(5,6,-4,LEAVES:13)
Block(5,5,-4,LEAVES:13)
Block(6,-6,-9,LOG:12)
Block(6,14,-5,LEAVES:5)
Block(11,15,-11,LEAVES:5)
Block(5,4,-4,LEAVES:13)
Block(6,13,-5,LEAVES:5)
Block(6,-4,-9,LOG:12)
Block(6,-3,-9,LOG:12)
Block(6,15,-5,LEAVES:5)
Block(6,-7,-9,LOG:12)
Block(6,8,-11,LEAVES:13)
Block(6,9,-11,LEAVES:13)
Block(4,7,-10,LEAVES:13)
Block(11,8,-11,LEAVES:13)
Block(10,11,-13,LEAVES:5)
Block(4,6,-10,LEAVES:13)
Block(10,12,-13,LEAVES:5)
Block(4,5,-10,LEAVES:13)
Block(10,13,-13,LEAVES:5)
Block(4,0,-8,LEAVES:14)
Block(9,10,-5,LEAVES:13)
Block(4,0,-6,LEAVES:14)
Block(9,16,-9,LEAVES:5)
Block(9,17,-9,LEAVES:5)
Block(9,18,-9,LEAVES:5)
Block(10,25,-10,LEAVES:5)
Block(5,16,-7,LEAVES:5)
Block(5,17,-7,LEAVES:5)
Block(5,18,-7,LEAVES:5)
Block(4,9,-6,LEAVES:13)
Block(8,7,-12,LEAVES:13)
Block(8,6,-12,LEAVES:13)
Block(5,11,-7,LEAVES:13)
Block(5,10,-7,LEAVES:13)
Block(10,24,-10,LEAVES:5)
Block(8,5,-12,LEAVES:13)
Block(10,23,-10,LEAVES:5)
Block(8,4,-12,LEAVES:13)
Block(12,4,-6,LEAVES:5)
Block(12,5,-6,LEAVES:5)
Block(6,10,-7,LEAVES:13)
Block(8,-6,-8,LOG:12)
Block(8,-1,-8,LEAVES:14)
Block(6,11,-7,LEAVES:13)
Block(9,20,-12,LEAVES:5)
Block(8,19,-6,LEAVES:5)
Block(9,10,-6,LEAVES:13)
Block(5,7,-5,LEAVES:13)
Block(9,16,-6,LEAVES:5)
Block(9,17,-6,LEAVES:5)
Block(5,5,-5,LEAVES:13)
Block(6,-1,-5,LEAVES:14)
Block(8,10,-6,LEAVES:13)
Block(5,6,-5,LEAVES:13)
Block(9,21,-12,LEAVES:5)
Block(9,11,-6,LEAVES:13)
Block(6,17,-7,LEAVES:5)
Block(10,7,-10,LEAVES:13)
Block(6,18,-7,LEAVES:5)
Block(10,8,-10,LEAVES:13)
Block(10,9,-10,LEAVES:13)
Block(8,13,-10,LEAVES:5)
Block(8,14,-10,LEAVES:5)
Block(8,11,-10,LEAVES:13)
Block(8,12,-10,LEAVES:13)
Block(8,15,-10,LEAVES:5)
Block(8,20,-5,LEAVES:5)
Block(8,19,-10,LEAVES:5)
Block(8,21,-6,LEAVES:5)
Block(8,20,-6,LEAVES:5)
Block(3,-1,-6,LEAVES:14)
Block(9,12,-12,LEAVES:13)
Block(9,11,-12,LEAVES:13)
Block(10,19,-8,LEAVES:5)
Block(9,19,-12,LEAVES:5)
Block(8,20,-10,LEAVES:5)
Block(8,21,-10,LEAVES:5)
Block(9,23,-10,LEAVES:5)
Block(9,21,-10,LEAVES:5)
Block(8,19,-5,LEAVES:5)
Block(8,4,-11,LEAVES:13)
Block(9,13,-10,LEAVES:5)
Block(8,6,-11,LEAVES:13)
Block(9,15,-10,LEAVES:5)
Block(8,5,-11,LEAVES:13)
Block(9,14,-10,LEAVES:5)
Block(8,7,-11,LEAVES:13)
Block(9,10,-10,LEAVES:13)
Block(6,1,-9,LOG:12)
Block(6,0,-9,LOG:12)
Block(6,7,-9,LEAVES:13)
Block(6,6,-9,LEAVES:13)
Block(6,8,-9,LEAVES:13)
Block(6,3,-9,LOG:12)
Block(6,2,-9,LOG:12)
Block(6,5,-9,LEAVES:13)
Block(6,4,-9,LOG:12)

#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 checks                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Require a condition at a certain location in order for the BO3 to be spawned.
# BlockCheck(x,y,z,BlockName[,BlockName[,...]]) - one of the blocks must be at the location
# BlockCheckNot(x,y,z,BlockName[,BlockName[,...]]) - all the blocks must not be at the location
# LightCheck(x,y,z,minLightLevel,maxLightLevel) - light must be between min and max (inclusive)

# You can use "Solid" as a BlockName for matching all solid blocks or "All" to match all blocks that aren't air.

# Examples:
BlockCheck(0,-1,0,Solid)
BlockCheck(0,-1,0,GRASS,DIRT)
BlockCheck(0,-1,2,GRASS,DIRT)
BlockCheck(1,-1,0,GRASS,DIRT)
BlockCheck(-1,-1,0,GRASS,DIRT)
BlockCheck(0,-1,-1,GRASS,DIRT)
BlockCheck(0,-1,0,Solid)
BlockCheckNot(0,-1,0,AIR)
#   BlockCheck(0,-1,0,Solid)       Require any solid block just below the object
#   BlockCheck(0,-1,0,WOOL)        Require any type of wool just below the object
#   BlockCheck(0,-1,0,WOOL:0)      Require white wool just below the object
#   BlockCheckNot(0,-1,0,WOOL:0)   Require that there is no white wool below the object
#   LightCheck(0,0,0,0,1)          Require almost complete darkness just below the object

#######################################################################
# +-----------------------------------------------------------------+ #
# |                             Branches                            | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Branches are objects that will spawn when this object spawns when it is used in
# the CustomStructure resource. Branches can also have branches, making complex
# structures possible. See the wiki for more details.

# Regular Branches spawn each branch with an independent chance of spawning.
# Branch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][IndividualChance])
# branchName - name of the object to spawn.
# rotation - NORTH, SOUTH, EAST or WEST.
# IndividualChance - The chance each branch has to spawn, assumed to be 100 when left blank

# Weighted Branches spawn branches with a dependent chance of spawning.
# WeightedBranch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][MaxChanceOutOf])
# MaxChanceOutOf - The chance all branches have to spawn out of, assumed to be 100 when left blank
